// SPDX-License-Identifier: MIT
pragma solidity 0.8.18;

contract MyToken {

    string public tokenName = "SALY";
    string public tokenAbbrv = "SAL";
    uint public totalSupply = 0;

    mapping(address => uint) public balances;

    function mint(address _address, uint _value) public {
        require(_address != address(0) && _value > 0, "Invalid address or value");

        totalSupply += _value;
        balances[_address] += _value;

        assert(balances[_address] >= _value);
    }

    function burn(address _address, uint _value) public {
        require(balances[_address] >= _value, "Insufficient balance");

        totalSupply -= _value;
        balances[_address] -= _value;

        assert(balances[_address] >= 0);
    }

    function transfer(address _to, uint _value) public {
        require(_to != address(0) && _value > 0, "Invalid address or value");
        
        if (balances[msg.sender] < _value) {
            revert("Insufficient balance");
        }

        balances[msg.sender] -= _value;
        balances[_to] += _value;

    }
}
